name: Build binarys
on:
  push:
    branches:
      - "main"

env:
  NODE_VERSION: "18"

jobs:
  # Build Bin to MacOS and Linux
  build_nix:
    runs-on: ${{ matrix.os }}
    name: (MacOS/Linux) Build binary (${{ matrix.os == 'ubuntu-latest' && 'Linux' || 'MacOS' }})
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      
      - uses: actions/setup-node@v3.1.1
        name: Setup Node.js
        with:
          node-version: "${{ env.NODE_VERSION }}.x"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Cache nexe
        uses: actions/cache@v3
        with:
          key: "${{ matrix.os }}_nexe-build_${{ env.NODE_VERSION }}"
          path: ~/.nexe

      - name: Build binary
        run: npm run build:bin

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os == 'ubuntu-latest' && 'Linux' || 'MacOS' }}_${{ runner.arch }}_${{ env.NODE_VERSION }}
          path: bin_*

  # Build for Windows x64
  build_win:
    runs-on: windows-latest
    name: (Windows) Build binary (windows-latest)
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-node@v3.1.1
        name: Setup Node.js
        with:
          node-version: "${{ env.NODE_VERSION }}.x"

      - name: Set up NASM
        uses: ilammy/setup-nasm@v1.3.0

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Cache nexe
        uses: actions/cache@v3
        with:
          key: "windows-latest_nexe-build_${{ env.NODE_VERSION }}"
          path: "%HOMEPATH%\\.nexe"

      - name: build binary
        run: npm run build:bin -- --verbose
        env:
          NODE_VERSION: "${{ env.NODE_VERSION }}"

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: Windows_x64_${{ env.NODE_VERSION }}
          path: bin_*

  # Build for Linux arm64
  build_linux_arm64:
    runs-on: ubuntu-latest
    name: (Linux) Build binary (linux Arm64)
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/setup-node@v3.1.1
        name: Setup Node.js
        with:
          node-version: "${{ env.NODE_VERSION }}.x"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Cache nexe
        uses: actions/cache@v3
        with:
          key: "linux-arm64_nexe-build_${{ env.NODE_VERSION }}"
          path: "%HOMEPATH%\\.nexe"

      - name: build binary
        run: npm run build:bin -- --target=linux-arm64 --verbose

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: Linux-arm64_${{ env.NODE_VERSION }}
          path: bin_*